using ReModAres.Core;
using ReModAres.Core.Managers;
using Serpent.Loader;
using UnityEngine;
using VRCSDK2;

namespace Serpent.Components
{
    internal class ExploitJustHComponent : ModComponent
    {

        public ExploitJustHComponent()
        {

        }


        public override void OnUiManagerInit(UiManager uiManager)
        {
            base.OnUiManagerInit(uiManager);

            var subMenu = uiManager.MainMenu.GetMenuPage(Page.PageNames.WorldCheats);
            var cheatMenu = subMenu.AddMenuPage("Club H Party", "Club H Party functions", ResourceManager.GetSprite("remodce.world"));

            cheatMenu.AddButton($"Remove Non VR Teleport", "Remove the function that teleports non vr users", delegate { JustH("포스트프로세싱", false); JustH("2f delete", false); JustH("3f delete (1)", false); }, ResourceManager.GetSprite("remodce.exit-door"));

            cheatMenu.AddButton($"All Floors Enable", "All Floors Enable", delegate { JustH("ele trick", true); }, ResourceManager.GetSprite("remodce.exit-door"));

            cheatMenu.AddButton($"Unlock Room 1", "Unlock room", delegate { JustHCheat("lock"); }, ResourceManager.GetSprite("remodce.exit-door"));
            cheatMenu.AddButton($"Unlock Room 2", "Unlock room", delegate { JustHCheat("lock (1)"); }, ResourceManager.GetSprite("remodce.exit-door"));
            cheatMenu.AddButton($"Unlock Room 3", "Unlock room", delegate { JustHCheat("lock (2)"); }, ResourceManager.GetSprite("remodce.exit-door"));
            cheatMenu.AddButton($"Unlock Room 4", "Unlock room", delegate { JustHCheat("lock (3)"); }, ResourceManager.GetSprite("remodce.exit-door"));
            cheatMenu.AddButton($"Unlock Room 5", "Unlock room", delegate { JustHCheat("lock (4)"); }, ResourceManager.GetSprite("remodce.exit-door"));
            cheatMenu.AddButton($"Unlock Room 6", "Unlock room", delegate { JustHCheat("lock (5)"); }, ResourceManager.GetSprite("remodce.exit-door"));


            cheatMenu.AddButton($"Tele to Floor 2", "Teleport to floor 2", delegate { JustHTeleport(new Vector3(24.9864f, 15.701f, -7.1761f)); }, ResourceManager.GetSprite("remodce.meet"));
            cheatMenu.AddButton($"Tele to Floor 3", "Teleport to floor 3", delegate { JustHTeleport(new Vector3(-61.0076f, 15.961f, -100.1939f)); }, ResourceManager.GetSprite("remodce.meet"));

            cheatMenu.AddButton($"Tele to room 1", "Teleport to room 1", delegate { JustHTeleport(new Vector3(-95.376f, 14.242f, 130.0615f)); }, ResourceManager.GetSprite("remodce.meet"));
            cheatMenu.AddButton($"Tele to room 2", "Teleport to room 2", delegate { JustHTeleport(new Vector3(-3.8299f, 14.242f, 130.0866f)); }, ResourceManager.GetSprite("remodce.meet"));
            cheatMenu.AddButton($"Tele to room 3", "Teleport to room 3", delegate { JustHTeleport(new Vector3(0.7652f, 13.448f, 61.4464f)); }, ResourceManager.GetSprite("remodce.meet"));
            cheatMenu.AddButton($"Tele to room 4", "Teleport to room 4", delegate { JustHTeleport(new Vector3(-93.2427f, 13.448f, 61.5138f)); }, ResourceManager.GetSprite("remodce.meet"));
            cheatMenu.AddButton($"Tele to room 5", "Teleport to room 5", delegate { JustHTeleport(new Vector3(0.0903f, 13.676f, 201.4697f)); }, ResourceManager.GetSprite("remodce.meet"));
            cheatMenu.AddButton($"Tele to room 6", "Teleport to room 6", delegate { JustHTeleport(new Vector3(-95.9686f, 13.676f, 201.7702f)); }, ResourceManager.GetSprite("remodce.meet"));


        }

        public static void JustHCheat(string gameObjectName)
        {
            if (RoomManager.field_Internal_Static_ApiWorld_0.id == "wrld_e5c30b56-efa8-42d5-a8d4-a2cca2bf3403")
            {
                foreach (GameObject gameObject in Resources.FindObjectsOfTypeAll<GameObject>())
                {
                    bool roomActive = gameObject.name.Equals(gameObjectName);
                    if (roomActive)
                    {
                        gameObject.GetComponent<VRC_Trigger>().Interact();
                    }
                }
                ReLogger.Msg("unlocked " + gameObjectName);
                Serpent.LogDebug("Unlocked " + gameObjectName);
            }
            else
            {
                ReLogger.Msg("You are not in the Just H Party");
                Serpent.LogDebug("You are not in the Just H Party");
            }
        }

        public static void JustHTeleport(Vector3 teleportLocation)
        {
            if (RoomManager.field_Internal_Static_ApiWorld_0.id == "wrld_e5c30b56-efa8-42d5-a8d4-a2cca2bf3403")
            {
                VRCPlayer.field_Internal_Static_VRCPlayer_0.transform.position = teleportLocation;
                ReLogger.Msg("Teleported to Room ");
                Serpent.LogDebug("Teleported to Room ");
            }
            else
            {
                ReLogger.Msg("You are not in the Just H Party");
                Serpent.LogDebug("You are not in the Just H Party");
            }
        }

        public static void JustH(string gameObjectName, bool state)
        {
            if (RoomManager.field_Internal_Static_ApiWorld_0.id == "wrld_e5c30b56-efa8-42d5-a8d4-a2cca2bf3403")
            {
                foreach (GameObject gameObject in Resources.FindObjectsOfTypeAll<GameObject>())
                {
                    bool roomActive = gameObject.name.Contains(gameObjectName);
                    if (roomActive)
                    {
                        gameObject.SetActive(state);
                        ReLogger.Msg("turning " + gameObjectName + " state:" + state);
                        Serpent.LogDebug("turning " + gameObjectName + " state:" + state);
                    }
                }
               
            }
            else
            {
                ReLogger.Msg("You are not in the Just H Party");
                Serpent.LogDebug("You are not in the Just H Party");
            }
        }
    }
}
